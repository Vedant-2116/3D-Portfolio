{"version":3,"sources":["../src/context.tsx","../src/useForm.ts","../package.json","../src/ValidationError.tsx","../src/types.ts"],"sourcesContent":["import React, { useEffect, useState, useContext, lazy, Suspense } from 'react';\nimport {\n  Client,\n  Config,\n  createClient,\n  getDefaultClient\n} from '@formspree/core';\nimport { loadStripe } from '@stripe/stripe-js/pure.js';\nimport { type Stripe } from '@stripe/stripe-js';\n\nconst Elements = lazy(() =>\n  import('@stripe/react-stripe-js').then(module => {\n    return { default: module.Elements };\n  })\n);\n\nexport type FromspreeContextType = {\n  client: Client;\n}\n\nexport type FormspreeProviderProps = {\n  project?: string;\n  children: React.ReactNode;\n  stripePK?: string;\n}\n\nconst FormspreeContext = React.createContext<FromspreeContextType>({\n  client: undefined\n});\n\nFormspreeContext.displayName = 'Formspree';\n\nlet stripePromise: Promise<Stripe>;\n\nconst getStripe = (stripeKey: string) => {\n  if (!stripePromise) {\n    stripePromise = loadStripe(stripeKey);\n  }\n  return stripePromise;\n};\n\nconst handleCreateClient = (promise?: Stripe, project?: string) => {\n  let config: Config = {};\n\n  if (promise) {\n    config.stripePromise = promise;\n  }\n\n  if (project) {\n    config.project = project;\n  }\n\n  return createClient(config);\n};\n\nexport const FormspreeProvider = (props: FormspreeProviderProps) => {\n  const [stateStripePromise, setStateStripePromise] = useState<\n    Stripe | undefined\n  >(undefined);\n  const [client, setClient] = useState<Client>(\n    handleCreateClient(stateStripePromise, props.project)\n  );\n\n  useEffect(() => {\n    client.startBrowserSession();\n\n    return () => {\n      client.teardown();\n    };\n  }, []);\n\n  useEffect(() => {\n    const getStripePromise = async () => {\n      const promiseStripe = await getStripe(props.stripePK);\n      setStateStripePromise(promiseStripe);\n    };\n\n    if (props.stripePK) {\n      getStripePromise();\n    }\n  }, [props.stripePK]);\n\n  useEffect(() => {\n    if (stateStripePromise) {\n      setClient(handleCreateClient(stateStripePromise, props.project));\n    }\n  }, [stateStripePromise]);\n\n  return (\n    <FormspreeContext.Provider value={{ client }}>\n      {props.stripePK ? (\n        <>\n          {stateStripePromise && (\n            <Suspense fallback={<p>....</p>}>\n              <Elements stripe={stateStripePromise}>\n                <>{props.children}</>\n              </Elements>\n            </Suspense>\n          )}\n        </>\n      ) : (\n        <>{props.children}</>\n      )}\n    </FormspreeContext.Provider>\n  );\n};\n\nexport function useFormspree() {\n  const context = useContext(FormspreeContext);\n\n  return context.client\n    ? context\n    : {\n        client: getDefaultClient()\n      };\n}\n","import React, { useState } from 'react';\nimport { Stripe, StripeElements } from '@stripe/stripe-js';\nimport { useElements, CardElement, useStripe } from '@stripe/react-stripe-js';\nimport { useFormspree } from './context';\nimport { ExtraData, ExtraDataValue } from './types';\nimport { version } from '../package.json';\nimport {\n  Client,\n  SubmissionResponse,\n  SubmissionData,\n  ErrorBody,\n  FormError\n} from '@formspree/core';\n\ntype FormEvent = React.FormEvent<HTMLFormElement>;\n\ntype SubmitHandler = (\n  submissionData: FormEvent | SubmissionData\n) => Promise<SubmissionResponse>;\n\ntype ResetFunction = () => void;\n\nexport type TUseForm = [\n  {\n    result: SubmissionResponse | null;\n    submitting: boolean;\n    succeeded: boolean;\n    errors: FormError[];\n  },\n  SubmitHandler,\n  ResetFunction\n];\n\nconst isEvent = (data: FormEvent | SubmissionData): data is FormEvent => {\n  return (data as FormEvent).preventDefault !== undefined;\n};\n\nconst useForm = (\n  formKey: string,\n  args: {\n    client?: Client;\n    data?: ExtraData;\n    endpoint?: string;\n    debug?: boolean;\n  } = {}\n): TUseForm => {\n  const [result, setResult] = useState<SubmissionResponse | null>(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const formspreeContext = useFormspree();\n  const client = args.client || formspreeContext;\n  let stripe: Stripe;\n  let elements: StripeElements;\n\n  if (!client) {\n    throw new Error('You must provide a Formspree client');\n  }\n\n  if (!formKey) {\n    throw new Error(\n      'You must provide a form key or hashid ' +\n        '(e.g. useForm(\"myForm\") or useForm(\"123xyz\")'\n    );\n  }\n\n  if (formspreeContext.client && formspreeContext.client.stripePromise) {\n    stripe = useStripe();\n    elements = useElements();\n  }\n\n  const debug = !!args.debug;\n  let extraData = args.data;\n\n  const reset: ResetFunction = () => {\n    setSubmitting(false);\n    setSucceeded(false);\n    setErrors([]);\n  };\n\n  const handleSubmit: SubmitHandler = async submissionData => {\n    const getFormData = async (event: FormEvent) => {\n      event.preventDefault();\n\n      const form = event.target as HTMLFormElement;\n      if (form.tagName != 'FORM') {\n        throw new Error('submit was triggered for a non-form element');\n      }\n      return new FormData(form);\n    };\n\n    let formData = isEvent(submissionData)\n      ? await getFormData(submissionData)\n      : submissionData;\n\n    const appendExtraData = (prop: string, value: string) => {\n      if (formData instanceof FormData) {\n        formData.append(prop, value);\n      } else {\n        formData = Object.assign(formData, { [prop]: value });\n      }\n    };\n\n    // Append extra data from config\n    if (typeof extraData === 'object') {\n      for (const prop in extraData) {\n        let extraDataValue;\n        if (typeof extraData[prop] === 'function') {\n          extraDataValue = (extraData[prop] as Exclude<\n            ExtraDataValue,\n            string\n          >).call(null);\n          if (typeof extraDataValue?.then === 'function') {\n            extraDataValue = await extraDataValue;\n          }\n        } else {\n          extraDataValue = extraData[prop];\n        }\n        if (extraDataValue !== undefined) {\n          appendExtraData(prop, extraDataValue as string);\n        }\n      }\n    }\n\n    const createPaymentMethod = async () => {\n      const address = {\n        ...(formData.address_line1 && {\n          line1: formData.address_line1\n        }),\n        ...(formData.address_line2 && {\n          line2: formData.address_line2\n        }),\n        ...(formData.address_city && {\n          city: formData.address_city\n        }),\n        ...(formData.address_country && {\n          country: formData.address_country\n        }),\n        ...(formData.address_state && {\n          state: formData.address_state\n        }),\n        ...(formData.address_postal_code && {\n          postal_code: formData.address_postal_code\n        })\n      };\n\n      const payload = await stripe.createPaymentMethod({\n        type: 'card',\n        card: elements.getElement(CardElement),\n        billing_details: {\n          ...(formData.name && { name: formData.name }),\n          ...(formData.email && { email: formData.email }),\n          ...(formData.phone && { phone: formData.phone }),\n          ...(address && {\n            address\n          })\n        }\n      });\n\n      return payload;\n    };\n\n    setSubmitting(true);\n\n    return formspreeContext.client\n      .submitForm(formKey, formData, {\n        endpoint: args.endpoint,\n        clientName: `@formspree/react@${version}`,\n        createPaymentMethod:\n          formspreeContext.client && formspreeContext.client.stripePromise\n            ? createPaymentMethod\n            : undefined\n      })\n      .then((result: SubmissionResponse) => {\n        let status = result.response.status;\n        let body;\n\n        if (status === 200) {\n          if (debug) console.log('Form submitted', result);\n          setSucceeded(true);\n          setResult(result);\n          setErrors([]);\n        } else if (status >= 400) {\n          body = result.body as ErrorBody;\n          if (body.errors) {\n            setErrors(body.errors);\n            if (debug) console.log('Error', result);\n          } else {\n            setErrors([{ message: 'Unexpected error' }]);\n            if (debug) console.log('Unexpected error', result);\n          }\n          setSucceeded(false);\n        }\n        return result;\n      })\n      .catch((error: Error) => {\n        if (debug) console.log('Unexpected error', error);\n        setSucceeded(false);\n        throw error;\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return [{ result, submitting, succeeded, errors }, handleSubmit, reset];\n};\n\nexport { CardElement, useForm };\n","{\n  \"name\": \"@formspree/react\",\n  \"version\": \"2.4.2\",\n  \"description\": \"The React component library for Formspree\",\n  \"private\": false,\n  \"bugs\": {\n    \"url\": \"https://github.com/formspree/formspree-react/issues\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/formspree/formspree-react.git\"\n  },\n  \"license\": \"MIT\",\n  \"contributors\": [\n    \"Derrick Reimer\",\n    \"Cole Krumbholz\",\n    \"Ismail Ghallou\"\n  ],\n  \"files\": [\n    \"dist/**\"\n  ],\n  \"sideEffects\": false,\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"scripts\": {\n    \"build\": \"tsup src/index.ts --format esm,cjs --dts --external react --minify\",\n    \"dev\": \"tsup src/index.ts --format esm,cjs --dts --external react --sourcemap\",\n    \"clean\": \"rm -rf dist && rm -rf node_modules\",\n    \"lint\": \"eslint src/*.ts*\",\n    \"test\": \"jest\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\"\n    }\n  },\n  \"lint-staged\": {\n    \"*.{js,ts,tsx,css,json,md}\": [\n      \"npx prettier --write\",\n      \"git add\"\n    ],\n    \"package.json\": [\n      \"npx sort-package-json\",\n      \"git add\"\n    ]\n  },\n  \"dependencies\": {\n    \"@formspree/core\": \"^2.8.1\",\n    \"@stripe/react-stripe-js\": \"^1.7.1\",\n    \"@stripe/stripe-js\": \"^1.35.0\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.22.1\",\n    \"@swc/core\": \"^1.3.61\",\n    \"@testing-library/dom\": \"^9.3.0\",\n    \"@testing-library/react\": \"^14.0.0\",\n    \"@testing-library/user-event\": \"^14.4.3\",\n    \"@types/jest\": \"^24.0.25\",\n    \"@types/react\": \"^18.0.15\",\n    \"@types/react-dom\": \"^18.0.6\",\n    \"babel-jest\": \"^26.3.0\",\n    \"husky\": \"^3.0.5\",\n    \"jest\": \"^26.4.2\",\n    \"lint-staged\": \"^9.2.5\",\n    \"np\": \"^6.4.0\",\n    \"prettier\": \"^1.18.2\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"sort-package-json\": \"^1.22.1\",\n    \"tsup\": \"^6.2.2\",\n    \"typescript\": \"^4.7.4\"\n  },\n  \"peerDependencies\": {\n    \"react\": \"^16.8 || ^17.0 || ^18.0\",\n    \"react-dom\": \"^16.8 || ^17.0 || ^18.0\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\",\n    \"registry\": \"https://registry.npmjs.org/\"\n  },\n  \"np\": {\n    \"yarn\": false\n  }\n}\n","import React from 'react';\nimport { FormError } from '@formspree/core';\n\nexport type ValidationErrorProps = {\n  prefix?: string;\n  field?: string;\n  errors: FormError[];\n  [x: string]: any;\n}\n\nexport const ValidationError: React.FC<ValidationErrorProps> = props => {\n  const { prefix, field, errors, ...attrs } = props;\n\n  const error = (errors || []).find(error => {\n    return error.field === field;\n  });\n\n  if (!error) {\n    return null;\n  }\n\n  return (\n    <div {...attrs}>\n      {prefix} {error.message}\n    </div>\n  );\n};\n","import * as Forms from '@formspree/core';\n\nexport { isFieldError } from '@formspree/core';\n\nexport type FormError = Forms.FormError;\nexport type FieldError = Forms.FieldError;\n\n/**\n * ExtraData values can be strings or functions that return a string, or a\n * promise that resolves to a string. Errors should be handled internally.\n * Functions can return undefined to skip this ExtraData value.\n */\nexport type ExtraDataValue =\n  | undefined\n  | string\n  | (() => string)\n  | (() => Promise<string>)\n  | (() => undefined)\n  | (() => Promise<undefined>);\n\nexport type ExtraData = {\n  [key: string]: ExtraDataValue;\n};\n\n// @deprecated\n// Will be removed in next major version\nexport type ErrorPayload = Forms.FormError;\n"],"mappings":"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","names":["useState","useState","result","React","error"]}